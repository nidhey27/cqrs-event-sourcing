// Code generated by ent, DO NOT EDIT.

package account

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the account type in the database.
	Label = "account"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAccountNumber holds the string denoting the account_number field in the database.
	FieldAccountNumber = "account_number"
	// FieldAccountHolderName holds the string denoting the account_holder_name field in the database.
	FieldAccountHolderName = "account_holder_name"
	// FieldAccountBalance holds the string denoting the account_balance field in the database.
	FieldAccountBalance = "account_balance"
	// Table holds the table name of the account in the database.
	Table = "accounts"
)

// Columns holds all SQL columns for account fields.
var Columns = []string{
	FieldID,
	FieldAccountNumber,
	FieldAccountHolderName,
	FieldAccountBalance,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Account queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByAccountNumber orders the results by the account_number field.
func ByAccountNumber(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAccountNumber, opts...).ToFunc()
}

// ByAccountHolderName orders the results by the account_holder_name field.
func ByAccountHolderName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAccountHolderName, opts...).ToFunc()
}

// ByAccountBalance orders the results by the account_balance field.
func ByAccountBalance(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAccountBalance, opts...).ToFunc()
}
